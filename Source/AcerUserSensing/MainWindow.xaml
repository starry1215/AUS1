<Window x:Class="AcerUserSensing.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AcerUserSensing"
        xmlns:p="clr-namespace:AcerUserSensing.Properties"
        xmlns:converter="clr-namespace:AcerUserSensing.Converter"
        mc:Ignorable="d" x:Name="AUS" Icon="{x:Null}" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen"
        Title="Acer User Sensing" Width="800" SizeToContent="Height"
        Loaded="AUS_Loaded" Unloaded="AUS_Unloaded">
    <Window.Resources>
        <ResourceDictionary>
            <converter:BooleanToOnOffStringConverter x:Key="boolToOnOffStringConverter" />
            <converter:BooleanToWALImageConverter x:Key="boolToWALImageConverter" />
            <converter:BooleanToWOAImageConverter x:Key="boolToWOAImageConverter" />
            <converter:TextBlockLocalizationConverter x:Key="TBLocalizationConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="./assets/resource/style-base.xaml" />
                <ResourceDictionary Source="./assets/resource/style-custom.xaml" />
                <ResourceDictionary Source="./assets/resource/style-custom-checkbox.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid Background="#f8f8f8">
            <StackPanel Margin="24,0,24,25">
                <Grid Margin="0,0,12,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="24" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Acer User Sensing" Style="{StaticResource TitleText}"/>
                    <CheckBox x:Name="cb_enableAll" Grid.Column="1" AutomationProperties.Name="{x:Static p:Resources.strIntro}"
                          Style="{StaticResource toggle-checkbox}" Content="{Binding IsChecked, ElementName=cb_enableAll, Converter={StaticResource boolToOnOffStringConverter}}"/>
                    <!--
                    <StackPanel Grid.Column="1" VerticalAlignment="Bottom">
                        <ToggleButton x:Name="btn_globalConfig" AutomationProperties.Name="{x:Static p:Resources.strChangeSetting}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Image Name="img_toggleBtn" Width="40" Height="40" Source="./assets/resource/setting_normal.png" />
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="img_toggleBtn" Property="Source" Value="./assets/resource/setting_active.png"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter TargetName="img_toggleBtn" Property="Source" Value="./assets/resource/setting_normal.png"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Popup x:Name="popup_globalConfig" IsOpen="{Binding IsChecked, ElementName=btn_globalConfig, Mode=OneWay}" StaysOpen="True"
                           Placement="Custom" AllowsTransparency="True">
                            <Border Padding="24.8,26,32,28" Margin="0,0,5,5" Background="#fff" Width="330">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="15" Opacity="0.09" Color="#000" ShadowDepth="2" RenderingBias="Quality" />
                                </Border.Effect>
                                <StackPanel SnapsToDevicePixels="True">
                                    <CheckBox x:Name="cb_externalMonitor" IsEnabled="{Binding IsEnabled, ElementName=cb_enableAll}">
                                        <TextBlock Margin="7.2,0,0,0" Text="{x:Static p:Resources.strConfigExternalMonitor}"></TextBlock>
                                    </CheckBox>
                                    <CheckBox x:Name="cb_charger" IsEnabled="{Binding IsEnabled, ElementName=cb_enableAll}" Margin="0,25,0,0" Visibility="Hidden">
                                        <TextBlock Text="{x:Static p:Resources.strConfigCharger}" Width="246" Margin="7.2,0,0,0" />
                                    </CheckBox>   
                                </StackPanel>
                            </Border>
                        </Popup>
                    </StackPanel>
                    -->
                </Grid>
                <TextBlock x:Name="txt_intro" Margin="0,24,0,24" Text="{x:Static p:Resources.strIntro}" />
                <CheckBox x:Name="cb_externalMonitor" Margin="24,0,0,0" IsEnabled="{Binding IsEnabled, ElementName=cb_enableAll}">
                    <TextBlock Margin="7.2,0,0,0" Text="{x:Static p:Resources.strConfigExternalMonitor}"></TextBlock>
                </CheckBox>
                <Grid Margin="0,24,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="364" />
                            <ColumnDefinition Width="24" />
                            <ColumnDefinition Width="364" />
                        </Grid.ColumnDefinitions>
                        <WrapPanel Grid.Column="0" Grid.Row="1" Background="#fff">
                            <Image x:Name="imgWAL" Grid.Column="0" Grid.Row="0" Height="169" Source="{Binding IsChecked, ElementName=cb_enableWAL, Converter={StaticResource boolToWALImageConverter}}" />
                            <StackPanel Margin="24,23,24,24" Orientation="Vertical">
                                <TextBlock Style="{StaticResource SubTitleText}" Text="{x:Static p:Resources.strWalTitle}" />
                                <CheckBox x:Name="cb_enableWAL" Margin="0,8,0,0" 
                                          Style="{StaticResource toggle-checkbox}" AutomationProperties.Name="{x:Static p:Resources.strWalDesc}"
                                          Content="{Binding IsChecked, ElementName=cb_enableWAL, Converter={StaticResource boolToOnOffStringConverter}}"/>
                                <TextBlock x:Name="tbl_walDesc" Margin="0,6,0,0" Text="{x:Static p:Resources.strWalDesc}" />
                                <TextBlock Margin="0,24,0,0" Text="{x:Static p:Resources.strWalDimDelay}" />
                                <ComboBox x:Name="combobox_dimDelay" IsEnabled="{Binding IsChecked, ElementName=cb_enableWAL}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                                <TextBlock Margin="0,24,0,0" Text="{x:Static p:Resources.strWalLockDelay}" />
                                <ComboBox x:Name="combobox_lockDelay" Margin="0,7,0,0" IsEnabled="{Binding IsChecked, ElementName=cb_enableWAL}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                        </WrapPanel>
                        <WrapPanel Grid.Column="2" Grid.Row="1" Background="#fff">
                            <Image x:Name="imgWOA" Grid.Column="2" Grid.Row="0" Source="{Binding IsChecked, ElementName=cb_enableWOA, Converter={StaticResource boolToWOAImageConverter}}" />
                            <StackPanel Grid.Column="2" Grid.Row="1" Margin="24,23,24,24" Orientation="Vertical">
                                <TextBlock Style="{StaticResource SubTitleText}" Text="{x:Static p:Resources.strWoaTitle}" />
                                <CheckBox x:Name="cb_enableWOA" Margin="0,8,0,0" 
                                          Style="{StaticResource toggle-checkbox}" AutomationProperties.Name="{x:Static p:Resources.strWoaDesc}"
                                          Content="{Binding IsChecked, ElementName=cb_enableWOA, Converter={StaticResource boolToOnOffStringConverter}}" />
                                <TextBlock x:Name="tblk_woaDesc" Margin="0,6,0,0">
                                    <TextBlock.Tag>
                                        <MultiBinding Converter="{StaticResource TBLocalizationConverter}">
                                            <Binding ElementName="tblk_woaDesc"/>
                                            <Binding Source="{x:Static p:Resources.strWoaDesc}"/>
                                            <Binding>
                                                <Binding.Source>
                                                    <Hyperlink x:Name="link_windowsHello" Click="link_windowsHello_Click">
                                                        <Run Text="Windows Hello™"/>
                                                    </Hyperlink>
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </TextBlock.Tag>
                                </TextBlock>
                                <TextBlock Style="{StaticResource ItemTitleText}" Margin="0,24,0,0"
                                   Text="Windows Hello™" />
                                <TextBlock Margin="0,12,0,0" FontSize="13" LineHeight="16" Text="{x:Static p:Resources.strWindowHelloDesc}" />
                            </StackPanel>
                        </WrapPanel>
                    </Grid>
                </Grid>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
